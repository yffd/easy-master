<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.dao.UupmTenantDao">
	<!-- ######################################################################### -->
	<!-- ##############################   基础sql开始    ############################## -->
	<!-- ######################################################################### -->
	
	<resultMap id="resutlId" type="com.yffd.easy.uupm.api.model.UupmTenantModel">
		<id column="ID" property="id" />
		<result column="VERSION" property="version" />
		<result column="DEL_FLAG" property="delFlag" />
		<result column="CREATE_BY" property="createBy" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="UPDATE_BY" property="updateBy" />
		<result column="UPDATE_TIME" property="updateTime" />
		<result column="END_TIME" property="endTime" />
		<result column="SERVE_TYPE" property="serveType" />
		<result column="START_TIME" property="startTime" />
		<result column="TENANT_CODE" property="tenantCode" />
		<result column="TENANT_NAME" property="tenantName" />
		<result column="TENANT_STATUS" property="tenantStatus" />
		<result column="TENANT_TYPE" property="tenantType" />
	</resultMap>

	<!-- 表名 -->
	<sql id="table_name"> uupm_tenant </sql>

	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION, t.DEL_FLAG, t.CREATE_BY, t.CREATE_TIME, t.UPDATE_BY, t.UPDATE_TIME, t.ID, t.END_TIME, t.SERVE_TYPE, t.START_TIME, t.TENANT_CODE, t.TENANT_NAME, t.TENANT_STATUS, t.TENANT_TYPE
	</sql>

	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="pageParam != null"> limit #{pageParam.pageStartRow}, #{pageParam.pageLimit} </if></sql>

	<!-- 排序条件 -->
	<sql id="conditions_orderby"> ORDER BY t.CREATE_TIME desc </sql>

	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<!-- Equal query -->
		<if test="version != null "> and t.VERSION = #{version} </if>
		<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
		<if test="createBy != null and createBy != ''"> and t.CREATE_BY = #{createBy} </if>
		<if test="createTime != null "><![CDATA[ and t.CREATE_TIME = #{createTime}]]> </if>
		<if test="updateBy != null and updateBy != ''"> and t.UPDATE_BY = #{updateBy} </if>
		<if test="updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{updateTime}]]> </if>
		<if test="id != null and id != ''"> and t.ID = #{id} </if>
		<if test="endTime != null "><![CDATA[ and t.END_TIME = #{endTime}]]> </if>
		<if test="serveType != null and serveType != ''"> and t.SERVE_TYPE = #{serveType} </if>
		<if test="startTime != null "><![CDATA[ and t.START_TIME = #{startTime}]]> </if>
		<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
		<if test="tenantStatus != null and tenantStatus != ''"> and t.TENANT_STATUS = #{tenantStatus} </if>
		<if test="tenantType != null and tenantType != ''"> and t.TENANT_TYPE = #{tenantType} </if>
		<!-- Like query -->
		<if test="tenantName != null and tenantName != ''"> and t.TENANT_NAME like CONCAT(CONCAT('%', #{tenantName}), '%') </if>
	</sql>

	<!-- 分页查询 -->
	<select id="selectRangeBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" />
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>

	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" />
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
	</select>

	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from 
		<include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>

	<!-- in条件查询 -->
	<select id="selectListByIds" parameterType="java.util.List" resultMap="resutlId">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/>  as t 
		<where>
			t.ID in 
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
		</where>
	</select>

	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>

	<!-- 单条插入 -->
	<insert id="insertOne" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, END_TIME, SERVE_TYPE, START_TIME, TENANT_CODE, TENANT_NAME, TENANT_STATUS, TENANT_TYPE)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{endTime}, #{serveType}, #{startTime}, #{tenantCode}, #{tenantName}, #{tenantStatus}, #{tenantType})
	</insert>

	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, END_TIME, SERVE_TYPE, START_TIME, TENANT_CODE, TENANT_NAME, TENANT_STATUS, TENANT_TYPE)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.version},
		#{item.delFlag},
		#{item.createBy},
		#{item.createTime},
		#{item.updateBy},
		#{item.updateTime},
		#{item.endTime},
		#{item.serveType},
		#{item.startTime},
		#{item.tenantCode},
		#{item.tenantName},
		#{item.tenantStatus},
		#{item.tenantType})
		</foreach>
	</insert>

	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		VERSION = VERSION + 1, 
		<if test="delFlag != null and delFlag != ''"> DEL_FLAG = #{delFlag},  </if>
		<if test="createBy != null and createBy != ''"> CREATE_BY = #{createBy},  </if>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy},  </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime},  </if>
		<if test="endTime != null "> END_TIME = #{endTime},  </if>
		<if test="serveType != null and serveType != ''"> SERVE_TYPE = #{serveType},  </if>
		<if test="startTime != null "> START_TIME = #{startTime},  </if>
		<if test="tenantCode != null and tenantCode != ''"> TENANT_CODE = #{tenantCode},  </if>
		<if test="tenantName != null and tenantName != ''"> TENANT_NAME = #{tenantName},  </if>
		<if test="tenantStatus != null and tenantStatus != ''"> TENANT_STATUS = #{tenantStatus},  </if>
		<if test="tenantType != null and tenantType != ''"> TENANT_TYPE = #{tenantType},  </if>
		</set>
		<where>
			ID = #{id}
			<if test="version != null "> and VERSION = #{version} </if>
		</where>
	</update>

	<!-- 批量更新 -->
	<update id="updateBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";">
		update <include refid="table_name" />
		<set>
		VERSION = VERSION + 1, 
		<if test="item.delFlag != null and item.delFlag != ''"> DEL_FLAG = #{item.delFlag},  </if>
		<if test="item.createBy != null and item.createBy != ''"> CREATE_BY = #{item.createBy},  </if>
		<if test="item.createTime != null "> CREATE_TIME = #{item.createTime},  </if>
		<if test="item.updateBy != null and item.updateBy != ''"> UPDATE_BY = #{item.updateBy},  </if>
		<if test="item.updateTime != null "> UPDATE_TIME = #{item.updateTime},  </if>
		<if test="item.endTime != null "> END_TIME = #{item.endTime},  </if>
		<if test="item.serveType != null and item.serveType != ''"> SERVE_TYPE = #{item.serveType},  </if>
		<if test="item.startTime != null "> START_TIME = #{item.startTime},  </if>
		<if test="item.tenantCode != null and item.tenantCode != ''"> TENANT_CODE = #{item.tenantCode},  </if>
		<if test="item.tenantName != null and item.tenantName != ''"> TENANT_NAME = #{item.tenantName},  </if>
		<if test="item.tenantStatus != null and item.tenantStatus != ''"> TENANT_STATUS = #{item.tenantStatus},  </if>
		<if test="item.tenantType != null and item.tenantType != ''"> TENANT_TYPE = #{item.tenantType},  </if>
		</set>
		<where>
			ID = #{item.id}
			<if test="item.version != null "> and VERSION = #{item.version} </if>
		</where>
		</foreach>
	</update>

	<!-- 主键删除 -->
	<delete id="deleteById" parameterType="java.lang.String">
		delete from <include refid="table_name" /> where ID = #{_parameter}
	</delete>

	<!-- 主键批量删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from <include refid="table_name" /> 
		where ID in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
	</delete>

	<!-- 删除 -->
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<if test="version != null "> and VERSION = #{version} </if>
		<if test="delFlag != null and delFlag != ''"> and DEL_FLAG = #{delFlag} </if>
		<if test="createBy != null and createBy != ''"> and CREATE_BY = #{createBy} </if>
		<if test="createTime != null "><![CDATA[ and CREATE_TIME = #{createTime}]]> </if>
		<if test="updateBy != null and updateBy != ''"> and UPDATE_BY = #{updateBy} </if>
		<if test="updateTime != null "><![CDATA[ and UPDATE_TIME = #{updateTime}]]> </if>
		<if test="id != null and id != ''"> and ID = #{id} </if>
		<if test="endTime != null "><![CDATA[ and END_TIME = #{endTime}]]> </if>
		<if test="serveType != null and serveType != ''"> and SERVE_TYPE = #{serveType} </if>
		<if test="startTime != null "><![CDATA[ and START_TIME = #{startTime}]]> </if>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		<if test="tenantName != null and tenantName != ''"> and TENANT_NAME = #{tenantName} </if>
		<if test="tenantStatus != null and tenantStatus != ''"> and TENANT_STATUS = #{tenantStatus} </if>
		<if test="tenantType != null and tenantType != ''"> and TENANT_TYPE = #{tenantType} </if>
		</where>
	</delete>

	<!-- ######################################################################### -->
	<!-- ##############################   基础sql结束    ############################## -->
	<!-- ######################################################################### -->

</mapper>
