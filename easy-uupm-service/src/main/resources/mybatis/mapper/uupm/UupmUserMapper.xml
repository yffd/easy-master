<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.mapper.UupmUserMapper">

	<select id="selectUserListBy" parameterType="java.util.Map" resultType="java.util.Map">
		select <include refid="table_columns" />
		, m.ORG_NAME as orgName
		, n.ACCOUNT_ID as accountId, n.ACCOUNT_STATUS as accountStatus, n.ACCOUNT_TYPE as accountType
		from <include refid="table_name"/>  as t 
		left join uupm_organization m on t.ORG_CODE = m.ORG_CODE
		left join uupm_account n on t.USER_CODE = n.ACCOUNT_ID
		<where>
			<include refid="conditions_where" />
			<if test="accountStatus != null and accountStatus != ''"> and n.ACCOUNT_STATUS = #{accountStatus} </if>
			<if test="accountType != null and accountType != ''"> and n.ACCOUNT_TYPE = #{accountType} </if>
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>
	
	<select id="selectUserCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from 
		<include refid="table_name"/>  as t 
		left join uupm_account n on t.USER_CODE = n.ACCOUNT_ID
		<where>
			<include refid="conditions_where" />
			<if test="accountStatus != null and accountStatus != ''"> and n.ACCOUNT_STATUS = #{accountStatus} </if>
			<if test="accountType != null and accountType != ''"> and n.ACCOUNT_TYPE = #{accountType} </if>
		</where>
	</select>
	
	<!-- ######################################################################### -->
	<!-- ##############################   基础sql开始    ############################## -->
	<!-- ######################################################################### -->
	
	<!-- 表名 -->
	<sql id="table_name"> uupm_user </sql>

	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION as version, t.DEL_FLAG as delFlag, t.CREATE_BY as createBy, t.CREATE_TIME as createTime, t.UPDATE_BY as updateBy, 
		t.UPDATE_TIME as updateTime, t.ID as id, t.TENANT_CODE as tenantCode, t.ORG_CODE as orgCode, t.USER_CODE as userCode, 
		t.USER_NAME as userName, '' as vv
	</sql>

	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="paramPage != null"> limit #{paramPage.startIndex}, #{paramPage.pageLimit} </if></sql>

	<!-- 排序条件 -->
	<sql id="conditions_orderby"> ORDER BY t.CREATE_TIME desc </sql>

	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<!-- Equal query -->
		<if test="paramPo.id != null and paramPo.id != ''"> and t.ID = #{paramPo.id} </if>
		<if test="paramPo.tenantCode != null and paramPo.tenantCode != ''"> and t.TENANT_CODE = #{paramPo.tenantCode} </if>
		<if test="paramPo.userCode != null and paramPo.userCode != ''"> and t.USER_CODE = #{paramPo.userCode} </if>
		<!-- Like query -->
		<if test="paramPo.userName != null and paramPo.userName != ''"> and t.USER_NAME like CONCAT(CONCAT('%', #{paramPo.userName}), '%') </if>
	
		<!-- 非model属性：in条件处理拼写，要求List集合中的值能转换成key-value形式，例如map、自定义model对象等 -->
		<if test="paramMap.idList != null and paramMap.idList.size()>0">
		and ID in <foreach item="item" index="index" collection="paramMap.idList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.tenantCodeList != null and paramMap.tenantCodeList.size()>0">
		and TENANT_CODE in <foreach item="item" index="index" collection="paramMap.tenantCodeList" open="(" separator="," close=")">#{item}</foreach>
		</if>
	
	</sql>

	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmUserModel">
		select <include refid="table_columns" />
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>

	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from 
		<include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>

	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmUserModel">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>

	<!-- 单条插入 -->
	<insert id="insertOne" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, ORG_CODE, USER_CODE, USER_NAME)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{tenantCode}, #{orgCode}, #{userCode}, #{userName})
	</insert>

	<!-- 批量插入 -->
	<insert id="insertList" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, ORG_CODE, USER_CODE, USER_NAME)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.version},
		#{item.delFlag},
		#{item.createBy},
		#{item.createTime},
		#{item.updateBy},
		#{item.updateTime},
		#{item.tenantCode},
		#{item.orgCode},
		#{item.userCode},
		#{item.userName})
		</foreach>
	</insert>

	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		VERSION = VERSION + 1, 
		<if test="paramPoNew.orgCode != null and paramPoNew.orgCode != ''"> ORG_CODE = #{paramPoNew.orgCode},  </if>
		<if test="paramPoNew.userCode != null and paramPoNew.userCode != ''"> USER_CODE = #{paramPoNew.userCode},  </if>
		<if test="paramPoNew.userName != null and paramPoNew.userName != ''"> USER_NAME = #{paramPoNew.userName},  </if>
		</set>
		<where>
		<if test="paramPoOld.id != null and paramPoOld.id != ''"> and ID = #{paramPoOld.id}  </if>
		<if test="paramPoOld.orgCode != null and paramPoOld.orgCode != ''"> and ORG_CODE = #{paramPoOld.orgCode}  </if>
		<if test="paramPoOld.userCode != null and paramPoOld.userCode != ''"> and USER_CODE = #{paramPoOld.userCode}  </if>
		<if test="paramPoOld.userName != null and paramPoOld.userName != ''"> and USER_NAME = #{paramPoOld.userName}  </if>
		<!-- 非model属性：in条件处理拼写，要求List集合中的值能转换成key-value形式，例如map、自定义model对象等 -->
		<if test="paramMap.idList != null and paramMap.idList.size()>0">
		and ID in <foreach item="item" index="index" collection="paramMap.idList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.tenantCodeList != null and paramMap.tenantCodeList.size()>0">
		and TENANT_CODE in <foreach item="item" index="index" collection="paramMap.tenantCodeList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<!-- 防止没有参数传递，导致全部更新 -->
		or 1=2
		</where>
	</update>

	<!-- 删除 -->
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<!-- model属性： -->
		<if test="paramPo.version != null "> and VERSION = #{paramPo.version} </if>
		<if test="paramPo.delFlag != null and paramPo.delFlag != ''"> and DEL_FLAG = #{paramPo.delFlag} </if>
		<if test="paramPo.createBy != null and paramPo.createBy != ''"> and CREATE_BY = #{paramPo.createBy} </if>
		<if test="paramPo.createTime != null "><![CDATA[ and CREATE_TIME = #{paramPo.createTime}]]> </if>
		<if test="paramPo.updateBy != null and paramPo.updateBy != ''"> and UPDATE_BY = #{paramPo.updateBy} </if>
		<if test="paramPo.updateTime != null "><![CDATA[ and UPDATE_TIME = #{paramPo.updateTime}]]> </if>
		<if test="paramPo.id != null and id != ''"> and ID = #{id} </if>
		<if test="paramPo.tenantCode != null and paramPo.tenantCode != ''"> and TENANT_CODE = #{paramPo.tenantCode} </if>
		<if test="paramPo.orgCode != null and paramPo.orgCode != ''"> and ORG_CODE = #{paramPo.orgCode} </if>
		<if test="paramPo.userCode != null and paramPo.userCode != ''"> and USER_CODE = #{paramPo.userCode} </if>
		<if test="paramPo.userName != null and paramPo.userName != ''"> and USER_NAME = #{paramPo.userName} </if>
		
		<!-- 非model属性：in条件处理拼写，要求List集合中的值能转换成key-value形式，例如map、自定义model对象等 -->
		<if test="paramMap.idList != null and paramMap.idList.size()>0">
		and ID in <foreach item="item" index="index" collection="paramMap.idList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.tenantCodeList != null and paramMap.tenantCodeList.size()>0">
		and TENANT_CODE in <foreach item="item" index="index" collection="paramMap.tenantCodeList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.orgCodeList != null and paramMap.orgCodeList.size()>0">
		and ORG_CODE in <foreach item="item" index="index" collection="paramMap.orgCodeList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.userCodeList != null and paramMap.userCodeList.size()>0">
		and USER_CODE in <foreach item="item" index="index" collection="paramMap.userCodeList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<if test="paramMap.userNameList != null and paramMap.userNameList.size()>0">
		and USER_NAME in <foreach item="item" index="index" collection="paramMap.userNameList" open="(" separator="," close=")">#{item}</foreach>
		</if>
		<!-- 防止没有参数传递，导致全部删除 -->
		or 1=2
		</where>
	</delete>

	<!-- ######################################################################### -->
	<!-- ##############################   基础sql结束    ############################## -->
	<!-- ######################################################################### -->

</mapper>
