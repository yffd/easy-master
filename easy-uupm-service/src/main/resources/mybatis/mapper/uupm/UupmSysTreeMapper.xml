<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.dao.UupmSysTreeDao">
	<!-- ######################################################################### -->
	<!-- ##############################   基础sql开始    ############################## -->
	<!-- ######################################################################### -->
	
	<resultMap id="resutlId" type="com.yffd.easy.uupm.api.model.UupmSysTreeModel">
		<id column="ID" property="id" />
		<result column="VERSION" property="version" />
		<result column="DEL_FLAG" property="delFlag" />
		<result column="CREATE_BY" property="createBy" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="UPDATE_BY" property="updateBy" />
		<result column="UPDATE_TIME" property="updateTime" />
		<result column="TENANT_CODE" property="tenantCode" />
		<result column="NODE_CODE" property="nodeCode" />
		<result column="NODE_LABEL" property="nodeLabel" />
		<result column="NODE_LEFT" property="nodeLeft" />
		<result column="NODE_NAME" property="nodeName" />
		<result column="NODE_RIGHT" property="nodeRight" />
		<result column="NODE_STATUS" property="nodeStatus" />
		<result column="NODE_VALUE" property="nodeValue" />
		<result column="REMARK" property="remark" />
		<result column="SEQ_NO" property="seqNo" />
	</resultMap>

	<!-- 表名 -->
	<sql id="table_name"> uupm_sys_tree </sql>

	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION, t.DEL_FLAG, t.CREATE_BY, t.CREATE_TIME, t.UPDATE_BY, t.UPDATE_TIME, t.ID, t.TENANT_CODE, t.NODE_CODE, t.NODE_LABEL, t.NODE_LEFT, t.NODE_NAME, t.NODE_RIGHT, t.NODE_STATUS, t.NODE_VALUE, t.REMARK, t.SEQ_NO
	</sql>

	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="pageParam != null"> limit #{pageParam.startIndex}, #{pageParam.pageLimit} </if></sql>

	<!-- 排序条件 -->
	<sql id="conditions_orderby"> ORDER BY t.CREATE_TIME desc </sql>

	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<!-- Equal query -->
		<if test="version != null "> and t.VERSION = #{version} </if>
		<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
		<if test="createBy != null and createBy != ''"> and t.CREATE_BY = #{createBy} </if>
		<if test="createTime != null "><![CDATA[ and t.CREATE_TIME = #{createTime}]]> </if>
		<if test="updateBy != null and updateBy != ''"> and t.UPDATE_BY = #{updateBy} </if>
		<if test="updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{updateTime}]]> </if>
		<if test="id != null and id != ''"> and t.ID = #{id} </if>
		<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
		<if test="nodeCode != null and nodeCode != ''"> and t.NODE_CODE = #{nodeCode} </if>
		<if test="nodeLabel != null and nodeLabel != ''"> and t.NODE_LABEL = #{nodeLabel} </if>
		<if test="nodeLeft != null "> and t.NODE_LEFT = #{nodeLeft} </if>
		<if test="nodeRight != null "> and t.NODE_RIGHT = #{nodeRight} </if>
		<if test="nodeStatus != null and nodeStatus != ''"> and t.NODE_STATUS = #{nodeStatus} </if>
		<if test="nodeValue != null and nodeValue != ''"> and t.NODE_VALUE = #{nodeValue} </if>
		<if test="remark != null and remark != ''"> and t.REMARK = #{remark} </if>
		<if test="seqNo != null "> and t.SEQ_NO = #{seqNo} </if>
		<!-- Like query -->
		<if test="nodeName != null and nodeName != ''"> and t.NODE_NAME like CONCAT(CONCAT('%', #{nodeName}), '%') </if>
	</sql>

	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/>  as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>

	<!-- 单条插入 -->
	<insert id="insertOne" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, NODE_CODE, NODE_LABEL, NODE_LEFT, NODE_NAME, NODE_RIGHT, NODE_STATUS, NODE_VALUE, REMARK, SEQ_NO)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{tenantCode}, #{nodeCode}, #{nodeLabel}, #{nodeLeft}, #{nodeName}, #{nodeRight}, #{nodeStatus}, #{nodeValue}, #{remark}, #{seqNo})
	</insert>

	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, NODE_CODE, NODE_LABEL, NODE_LEFT, NODE_NAME, NODE_RIGHT, NODE_STATUS, NODE_VALUE, REMARK, SEQ_NO)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.version},
		#{item.delFlag},
		#{item.createBy},
		#{item.createTime},
		#{item.updateBy},
		#{item.updateTime},
		#{item.tenantCode},
		#{item.nodeCode},
		#{item.nodeLabel},
		#{item.nodeLeft},
		#{item.nodeName},
		#{item.nodeRight},
		#{item.nodeStatus},
		#{item.nodeValue},
		#{item.remark},
		#{item.seqNo})
		</foreach>
	</insert>

	<!-- ######################################################################### -->
	<!-- ##############################   基础sql结束    ############################## -->
	<!-- ######################################################################### -->

	<update id="updateLeftForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LEFT >= #{nodeRight}
		</where>
	</update>
	
	<update id="updateRightForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_RIGHT >= #{nodeRight}
		</where>
	</update>
	
	<update id="updateLeftForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LEFT > #{nodeLeft}
		</where>
	</update>
	
	<update id="updateRightForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_RIGHT > #{nodeRight}
		</where>
	</update>
	
	<delete id="delNodes" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		<![CDATA[ and NODE_LEFT >= #{nodeLeft} ]]>
		<![CDATA[ and NODE_RIGHT <= #{nodeRight} ]]>
		</where>
	</delete>
	
	<select id="countLayer" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*)
		from <include refid="table_name"/>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		<![CDATA[ and NODE_LEFT <= #{nodeLeft} ]]>
		<![CDATA[ and NODE_RIGHT >= #{nodeRight} ]]>
		</where>
	</select>
	
	<select id="selectChildrenNodeListBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
			<if test="nodeStatus != null and nodeStatus != ''"> and t.NODE_STATUS = #{nodeStatus} </if>
			<if test="nodeLabel != null and nodeLabel != ''"> and t.NODE_LABEL = #{nodeLabel} </if>
			and t.NODE_LEFT between #{nodeLeft} and #{nodeRight}
		</where>
		order by NODE_LEFT asc
	</select>
	
	<select id="selectParentNodeListBy" parameterType="java.util.Map" resultMap="resutlId">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
			<if test="nodeStatus != null and nodeStatus != ''"> and t.NODE_STATUS = #{nodeStatus} </if>
			<if test="nodeLabel != null and nodeLabel != ''"> and t.NODE_LABEL = #{nodeLabel} </if>
			<![CDATA[ and t.NODE_LEFT < #{nodeLeft} ]]>
			<![CDATA[ and t.NODE_RIGHT > #{nodeRight} ]]>
		</where>
		order by t.NODE_LEFT asc
	</select>
	
</mapper>
