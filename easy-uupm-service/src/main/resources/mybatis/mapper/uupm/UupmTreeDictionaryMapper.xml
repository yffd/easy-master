<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.mapper.IUupmTreeDictionaryMapper">


	<!-- ######################################################################### -->
	<!-- #########################   common sql begin    ######################### -->
	<!-- ######################################################################### -->
	
	<!-- 表名 -->
	<sql id="table_name"> uupm_tree_dictionary </sql>
	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION as version, t.DEL_FLAG as delFlag, t.CREATE_BY as createBy, t.CREATE_TIME as createTime, t.UPDATE_BY as updateBy, 
		t.UPDATE_TIME as updateTime, t.ID as id, t.TENANT_CODE as tenantCode, t.NODE_CODE as nodeCode, t.NODE_LABEL as nodeLabel, 
		t.NODE_LAYER as nodeLayer, t.NODE_LEFT as nodeLeft, t.NODE_NAME as nodeName, t.NODE_RIGHT as nodeRight, t.NODE_VALUE as nodeValue, 
		t.PARENT_NODE_CODE as parentNodeCode, t.PARENT_NODE_NAME as parentNodeName, t.REMARK as remark, t.SEQ_NO as seqNo
	</sql>
	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="page != null"> limit #{page.startIndex}, #{page.pageLimit} </if></sql>
	<!-- 排序条件 -->
	<sql id="conditions_orderby"> ORDER BY t.SEQ_NO asc, t.CREATE_TIME desc </sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<if test="model != null">
			<!-- Equal query -->
			<if test="model.version != null "> and t.VERSION = #{model.version} </if>
			<if test="model.delFlag != null and model.delFlag != ''"> and t.DEL_FLAG = #{model.delFlag} </if>
			<if test="model.createBy != null and model.createBy != ''"> and t.CREATE_BY = #{model.createBy} </if>
			<if test="model.createTime != null "><![CDATA[ and t.CREATE_TIME = #{model.createTime}]]> </if>
			<if test="model.updateBy != null and model.updateBy != ''"> and t.UPDATE_BY = #{model.updateBy} </if>
			<if test="model.updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{model.updateTime}]]> </if>
			<if test="model.id != null and model.id != ''"> and t.ID = #{model.id} </if>
			<if test="model.tenantCode != null and model.tenantCode != ''"> and t.TENANT_CODE = #{model.tenantCode} </if>
			<if test="model.nodeCode != null and model.nodeCode != ''"> and t.NODE_CODE = #{model.nodeCode} </if>
			<if test="model.nodeLabel != null and model.nodeLabel != ''"> and t.NODE_LABEL = #{model.nodeLabel} </if>
			<if test="model.nodeLayer != null "> and t.NODE_LAYER = #{model.nodeLayer} </if>
			<if test="model.nodeLeft != null "> and t.NODE_LEFT = #{model.nodeLeft} </if>
			<if test="model.nodeRight != null "> and t.NODE_RIGHT = #{model.nodeRight} </if>
			<if test="model.nodeValue != null and model.nodeValue != ''"> and t.NODE_VALUE = #{model.nodeValue} </if>
			<if test="model.parentNodeCode != null and model.parentNodeCode != ''"> and t.PARENT_NODE_CODE = #{model.parentNodeCode} </if>
			<if test="model.seqNo != null "> and t.SEQ_NO = #{model.seqNo} </if>
			<!-- Like query -->
			<if test="model.nodeName != null and model.nodeName != ''"> and t.NODE_NAME like CONCAT(CONCAT('%', #{model.nodeName}), '%') </if>
			<if test="model.parentNodeName != null and model.parentNodeName != ''"> and t.PARENT_NODE_NAME like CONCAT(CONCAT('%', #{model.parentNodeName}), '%') </if>
		</if>
	</sql>
	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmTreeDictionaryModel">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>
	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from 
		<include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmTreeDictionaryModel">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条插入 -->
	<insert id="insertOne" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, NODE_CODE, NODE_LABEL, NODE_LAYER, NODE_LEFT, NODE_NAME, NODE_RIGHT, NODE_VALUE, PARENT_NODE_CODE, PARENT_NODE_NAME, REMARK, SEQ_NO)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{tenantCode}, #{nodeCode}, #{nodeLabel}, #{nodeLayer}, #{nodeLeft}, #{nodeName}, #{nodeRight}, #{nodeValue}, #{parentNodeCode}, #{parentNodeName}, #{remark}, #{seqNo})
	</insert>
	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="model != null">
			<if test="model.delFlag != null and model.delFlag != ''"> DEL_FLAG = #{model.delFlag},  </if>
			<if test="model.nodeCode != null and model.nodeCode != ''"> NODE_CODE = #{model.nodeCode},  </if>
			<if test="model.nodeLabel != null and model.nodeLabel != ''"> NODE_LABEL = #{model.nodeLabel},  </if>
			<if test="model.nodeLayer != null"> NODE_LAYER = #{model.nodeLayer},  </if>
			<if test="model.nodeLeft != null"> NODE_LEFT = #{model.nodeLeft},  </if>
			<if test="model.nodeName != null and model.nodeName != ''"> NODE_NAME = #{model.nodeName},  </if>
			<if test="model.nodeRight != null"> NODE_RIGHT = #{model.nodeRight},  </if>
			<if test="model.nodeValue != null and model.nodeValue != ''"> NODE_VALUE = #{model.nodeValue},  </if>
			<if test="model.parentNodeCode != null and model.parentNodeCode != ''"> PARENT_NODE_CODE = #{model.parentNodeCode},  </if>
			<if test="model.parentNodeName != null and model.parentNodeName != ''"> PARENT_NODE_NAME = #{model.parentNodeName},  </if>
			<if test="model.remark != null and model.remark != ''"> REMARK = #{model.remark},  </if>
			<if test="model.seqNo != null"> SEQ_NO = #{model.seqNo},  </if>
			<if test="model.tenantCode != null and model.tenantCode != ''"> TENANT_CODE = #{model.tenantCode},  </if>
			<if test="model.updateBy != null and model.updateBy != ''"> UPDATE_BY = #{model.updateBy},  </if>
			<if test="model.updateTime != null"> UPDATE_TIME = #{model.updateTime},  </if>
			VERSION = VERSION + 1, 
		</if>
		</set>
		<where>
		<if test="old != null">
			<!-- Equal query -->
			<if test="old.version != null "> and VERSION = #{old.version} </if>
			<if test="old.delFlag != null and old.delFlag != ''"> and DEL_FLAG = #{old.delFlag} </if>
			<if test="old.createBy != null and old.createBy != ''"> and CREATE_BY = #{old.createBy} </if>
			<if test="old.createTime != null "><![CDATA[ and CREATE_TIME = #{old.createTime}]]> </if>
			<if test="old.updateBy != null and old.updateBy != ''"> and UPDATE_BY = #{old.updateBy} </if>
			<if test="old.updateTime != null "><![CDATA[ and UPDATE_TIME = #{old.updateTime}]]> </if>
			<if test="old.id != null and old.id != ''"> and ID = #{old.id} </if>
			<if test="old.tenantCode != null and old.tenantCode != ''"> and TENANT_CODE = #{old.tenantCode} </if>
			<if test="old.nodeLayer != null "> and NODE_LAYER = #{old.nodeLayer} </if>
			<if test="old.nodeLeft != null "> and NODE_LEFT = #{old.nodeLeft} </if>
			<if test="old.nodeName != null and old.nodeName != ''"> and NODE_NAME = #{old.nodeName} </if>
			<if test="old.nodeRight != null "> and NODE_RIGHT = #{old.nodeRight} </if>
			<if test="old.nodeValue != null and old.nodeValue != ''"> and NODE_VALUE = #{old.nodeValue} </if>
			<if test="old.parentNodeCode != null and old.parentNodeCode != ''"> and PARENT_NODE_CODE = #{old.parentNodeCode} </if>
			<if test="old.parentNodeName != null and old.parentNodeName != ''"> and PARENT_NODE_NAME = #{old.parentNodeName} </if>
			<if test="old.seqNo != null "> and SEQ_NO = #{old.seqNo} </if>
		</if>
		and NODE_LABEL = #{old.nodeLabel}
		and NODE_CODE = #{old.nodeCode}
		</where>
	</update>
	<!-- ######################################################################### -->
	<!-- ##########################   common sql end    ########################## -->
	<!-- ######################################################################### -->

	<select id="selectChildrenNodeList" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmTreeDictionaryModel">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			<if test="nodeLayer != null "><![CDATA[ and t.NODE_LAYER <= #{nodeLayer} ]]></if>
			and t.NODE_LABEL = #{nodeLabel}
			and t.NODE_LEFT between #{nodeLeft} and #{nodeRight}
		</where>
		order by t.SEQ_NO asc
	</select>
	
	<select id="selectParentNodeList" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.api.model.UupmTreeDictionaryModel">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="delFlag != null and delFlag != ''"> and t.DEL_FLAG = #{delFlag} </if>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			and t.NODE_LABEL = #{nodeLabel}
			<![CDATA[ and t.NODE_LEFT < #{nodeLeft} ]]>
			<![CDATA[ and t.NODE_RIGHT > #{nodeRight} ]]>
		</where>
		order by t.SEQ_NO asc
	</select>
	
	<select id="countLayer" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(*)
		from <include refid="table_name"/>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		<![CDATA[ and NODE_LEFT <= #{nodeLeft} ]]>
		<![CDATA[ and NODE_RIGHT >= #{nodeRight} ]]>
		</where>
	</select>
	
	<delete id="delNodes" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		<![CDATA[ and NODE_LEFT >= #{nodeLeft} ]]>
		<![CDATA[ and NODE_RIGHT <= #{nodeRight} ]]>
		</where>
	</delete>
	
	<update id="updateLeftForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		and NODE_LEFT >= #{nodeRight}
		</where>
	</update>
	
	<update id="updateRightForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		and NODE_RIGHT >= #{nodeRight}
		</where>
	</update>
	
	<update id="updateLeftForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		and NODE_LEFT > #{nodeLeft}
		</where>
	</update>
	
	<update id="updateRightForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and NODE_LABEL = #{nodeLabel}
		and NODE_RIGHT > #{nodeRight}
		</where>
	</update>
	
</mapper>
