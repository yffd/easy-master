<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yffd.easy.app.system.dao.impl.SysPermissionDaoImpl">

	<!-- ##############################   基础sql开始   ############################## -->
	
	<resultMap id="resutlId" type="org.yffd.easy.app.system.model.SysPermission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="editor" property="editor" jdbcType="VARCHAR" />
		<result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sys_permission_table"> sys_permission </sql>
	<sql id="sys_permission_columns"> id, version, del_flag, creater, create_time, editor, edit_time, remark, 
	name, code </sql>
	<sql id="sys_permission_limit"> limit #{startRowNum}, #{numPerPage} </sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="sys_permission_where">
		<!-- Equal query -->
		<if test="code != null and code != ''"> and code = #{code} </if>
		<!-- Like query -->
		<if test="name != null and name != ''"> and name like CONCAT(CONCAT('%', #{name}), '%') </if>
	</sql>
	
	<!-- 分页查询 -->
	<select id="selectPage" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="sys_permission_columns"/>
		from
		<include refid="sys_permission_table" />
		<where>
			<include refid="sys_permission_where" />
		</where>
		order by create_time desc
		<include refid="sys_permission_limit" />
	</select>
	
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="sys_permission_table" />
		<where>
			<include refid="sys_permission_where" />
		</where>
	</select>
	
	<select id="selectByPK" parameterType="java.lang.String" resultMap="resutlId">
		select
		<include refid="sys_permission_columns"/>
		from
		<include refid="sys_permission_table" />
		where id = #{_parameter}
	</select>
	
	<!-- selectListBy、selectBy、selectAll -->
	<select id="selectListBy" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="sys_permission_columns"/>
		from
		<include refid="sys_permission_table" />
		<where>
			<include refid="sys_permission_where" />
		</where>
		order by code
	</select>
	
	<insert id="insert" parameterType="org.yffd.easy.app.system.model.SysPermission" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="sys_permission_table" />
		(version, del_flag, creater, create_time, editor, edit_time, remark, 
		name, code)
		values
		(0, #{delFlag}, #{creater}, #{createTime}, #{editor}, #{editTime}, #{remark}, 
		#{name}, #{code})
	</insert>
	
	<update id="updateByPK" parameterType="org.yffd.easy.app.system.model.SysPermission">
		update <include refid="sys_permission_table" />
		<set>
			version = version + 1,
			editor = #{editor, jdbcType=VARCHAR},
			edit_time = #{editTime, jdbcType=TIMESTAMP},
			remark = #{remark, jdbcType=VARCHAR},
			name = #{name, jdbcType=VARCHAR},
			code = #{code, jdbcType=VARCHAR},
		</set>
		where code = #{code}
	</update>
	
	<delete id="deleteByPK" parameterType="java.lang.String">
		delete from
		<include refid="sys_permission_table" />
		where code = #{_parameter}
	</delete>
	
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from
		<include refid="sys_permission_table" />
		<where>
			<include refid="sys_permission_where" />
		</where>
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from
		<include refid="sys_permission_table" />
		where code in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item.code}</foreach>
	</delete>
	
	<!-- ##############################   基础sql结束    ############################## -->
	
</mapper>