<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yffd.easy.app.system.dao.impl.SysFunctionDaoImpl">

	<!-- ##############################   基础sql开始   ############################## -->
	
	<resultMap id="resutlId" type="org.yffd.easy.app.system.model.SysFunction">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="VERSION" property="version" jdbcType="INTEGER" />
		<result column="DEL_FLAG" property="delFlag" jdbcType="CHAR" />
		<result column="CREATER" property="creater" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="EDITOR" property="editor" jdbcType="VARCHAR" />
		<result column="EDIT_TIME" property="editTime" jdbcType="TIMESTAMP" />
		
		<result column="FUNC_NAME" property="funcName" jdbcType="VARCHAR" />
		<result column="FUNC_CODE" property="funcCode" jdbcType="VARCHAR" />
		<result column="P_CODE" property="parentCode" jdbcType="VARCHAR" />
		<result column="URL" property="url" jdbcType="VARCHAR" />
		<result column="TYPE" property="type" jdbcType="CHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="SORT" property="sort" jdbcType="FLOAT" />
		<result column="ICONCLS" property="iconCls" jdbcType="VARCHAR" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sys_function_table"> sys_function </sql>
	<sql id="sys_function_column"> ID, VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME, 
	FUNC_NAME, FUNC_CODE, P_CODE, URL, TYPE, ACTIVE, SORT, ICONCLS, REMARK </sql>
	<sql id="sys_function_limit"><if test="pageLimit != null and pageLimit != ''"> limit #{startRowNum}, #{numPerPage} </if></sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="sys_function_where">
		<!-- Equal query -->
		<if test="funcCode != null and funcCode != ''"> and FUNC_CODE = #{funcCode} </if>
		<if test="parentCode != null and parentCode != ''"> and P_CODE = #{parentCode} </if>
		<if test="type != null and type != ''"> and TYPE = #{type} </if>
		<if test="active != null and active != ''"> and ACTIVE = #{active} </if>
		<!-- Like query -->
		<if test="funcName != null and funcName != ''"> and FUNC_NAME like CONCAT(CONCAT('%', #{funcName}), '%') </if>
	</sql>
	
	<!-- selectListBy、selectAll -->
	<select id="selectListBy" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="sys_function_column"/>
		from
		<include refid="sys_function_table" />
		<where>
			<include refid="sys_function_where" />
		</where>
		order by SORT
		<include refid="sys_function_limit" />
	</select>
	
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="sys_function_table" />
		<where>
			<include refid="sys_function_where" />
		</where>
	</select>
	
	<select id="selectByPK" parameterType="java.lang.String" resultMap="resutlId">
		select
		<include refid="sys_function_column"/>
		from
		<include refid="sys_function_table" />
		where ID = #{_parameter}
	</select>
	
	<select id="selectOne" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="sys_function_column"/>
		from
		<include refid="sys_function_table" />
		<where>
			<include refid="sys_function_where" />
		</where>
	</select>
	
	<insert id="insert" parameterType="org.yffd.easy.app.system.model.SysFunction" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="sys_function_table" />
		(VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME, 
		FUNC_NAME, FUNC_CODE, P_CODE, URL, TYPE, ACTIVE, SORT, ICONCLS, REMARK)
		values
		(0, #{delFlag}, #{creater}, #{createTime}, #{editor}, #{editTime},
		#{funcName}, #{funcCode}, #{parentCode}, #{url}, #{type}, #{active}, #{sort}, #{iconCls}, #{remark})
	</insert>

	<update id="updateByPK" parameterType="org.yffd.easy.app.system.model.SysFunction">
		update <include refid="sys_function_table" />
		<set>
			VERSION = VERSION + 1,
			EDITOR = #{editor, jdbcType=VARCHAR},
			EDIT_TIME = #{editTime, jdbcType=TIMESTAMP},
			FUNC_NAME = #{funcName, jdbcType=VARCHAR},
			P_CODE = #{parentCode, jdbcType=VARCHAR},
			URL = #{url, jdbcType=VARCHAR},
			TYPE = #{type, jdbcType=CHAR},
			ACTIVE = #{active, jdbcType=CHAR},
			SORT = #{sort, jdbcType=FLOAT},
			ICONCLS = #{iconCls, jdbcType=VARCHAR},
			REMARK = #{remark, jdbcType=VARCHAR},
		</set>
		where FUNC_CODE = #{funcCode}
	</update>
	
	<delete id="deleteByPK" parameterType="java.lang.String">
		delete from
		<include refid="sys_function_table" />
		where FUNC_CODE = #{_parameter}
	</delete>
	
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from
		<include refid="sys_function_table" />
		<where>
			<include refid="sys_function_where" />
		</where>
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from
		<include refid="sys_function_table" />
		where FUNC_CODE in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item.code}</foreach>
	</delete>
	
	<!-- ##############################   基础sql结束    ############################## -->
	
	<select id="findByRole" parameterType="java.lang.String" resultMap="resutlId">
		select t.* from (
			select n.*
			from
			sys_role_func as m
			left join
			<include refid="sys_function_table" /> as n
			on m.FUNC_CODE=n.FUNC_CODE
			where m.ROLE_CODE = #{_parameter}
		) t where t.ID is not null
	</select>
	
</mapper>