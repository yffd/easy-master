<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.workflow.app.mapper.OaLeaveMapper">

	<!-- ##############################   基础sql开始   ############################## -->
	
	<sql id="app_oa_leave_table"> app_oa_leave </sql>
	<sql id="app_oa_leave_columns"> ID, VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME,
	USER_CODE, APPLY_TIME, LEAVE_TYPE, START_TIME, END_TIME, REASON, PROCESS_INSTANCE_ID </sql>
	<sql id="app_oa_leave_limit"><if test="pageLimit != null and pageLimit != ''"> limit #{pageStartRow}, #{pageLimit} </if></sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="app_oa_leave_where">
		<!-- Equal query -->
		<if test="userCode != null and userCode != ''"> and USER_CODE = #{userCode} </if>
		<if test="applyTime != null and applyTime != ''"> and APPLY_TIME = #{applyTime} </if>
		<if test="processInstanceId != null and processInstanceId != ''"> and PROCESS_INSTANCE_ID = #{processInstanceId} </if>
	</sql>
	
	<!-- selectListBy、selectAll -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="java.util.Map">
		select
		<include refid="app_oa_leave_columns"/>
		from
		<include refid="app_oa_leave_table" />
		<where>
			<include refid="app_oa_leave_where" />
		</where>
		order by APPLY_TIME desc
		<include refid="app_oa_leave_limit" />
	</select>
	
	<select id="selectCountBy" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(1) from
		<include refid="app_oa_leave_table" />
		<where>
			<include refid="app_oa_leave_where" />
		</where>
	</select>
	
	<select id="selectByPK" parameterType="java.lang.String" resultType="java.util.Map">
		select
		<include refid="app_oa_leave_columns"/>
		from
		<include refid="app_oa_leave_table" />
		where u.ID = #{_parameter}
	</select>
	
	<select id="selectOne" parameterType="java.util.Map" resultType="java.util.Map">
		select
		<include refid="app_oa_leave_columns"/>
		from
		<include refid="app_oa_leave_table" />
		<where>
			<include refid="app_oa_leave_where" />
		</where>
	</select>
	
	<insert id="insert" parameterType="com.yffd.easy.workflow.app.model.OaLeave" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="app_oa_leave_table" />
		(VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME,
		USER_CODE, APPLY_TIME, LEAVE_TYPE, START_TIME, END_TIME, REASON, PROCESS_INSTANCE_ID)
		values
		(0, #{delFlag}, #{creater}, #{createTime}, #{editor}, #{editTime}, 
		#{userCode}, #{applyTime}, #{leaveType}, #{startTime}, #{endTime}, #{reason}, #{processInstanceId})
	</insert>
	
	<update id="updateByPK" parameterType="com.yffd.easy.workflow.app.model.OaLeave">
		update <include refid="app_oa_leave_table" />
		<set>
			version = version + 1,
			editor = #{editor, jdbcType=VARCHAR},
			edit_time = #{editTime, jdbcType=TIMESTAMP},
			<if test="userCode != null and userCode != ''"> USER_CODE = #{userCode, jdbcType=VARCHAR}, </if>
			<if test="applyTime != null"> APPLY_TIME = #{applyTime, jdbcType=TIMESTAMP}, </if>
			<if test="leaveType != null and leaveType != ''"> LEAVE_TYPE = #{leaveType, jdbcType=VARCHAR}, </if>
			<if test="startTime != null"> START_TIME = #{startTime, jdbcType=TIMESTAMP}, </if>
			<if test="endTime != null"> END_TIME = #{endTime, jdbcType=TIMESTAMP}, </if>
			<if test="reason != null and reason != ''"> REASON = #{reason, jdbcType=VARCHAR}, </if>
			<if test="processInstanceId != null and processInstanceId != ''"> PROCESS_INSTANCE_ID = #{processInstanceId, jdbcType=VARCHAR}, </if>
		</set>
		where ID = #{id}
	</update>
	
	<delete id="deleteByPK" parameterType="java.lang.String">
		delete from
		<include refid="app_oa_leave_table" />
		where ID = #{_parameter}
	</delete>
	
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from
		<include refid="app_oa_leave_table" />
		<where>
			<include refid="app_oa_leave_where" />
		</where>
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from
		<include refid="app_oa_leave_table" />
		where ID in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item.id}</foreach>
	</delete>
	
	<!-- ##############################   基础sql结束    ############################## -->
	
</mapper>