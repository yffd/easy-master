<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.pmi.dao.impl.PmiAccountDaoImpl">

	<!-- ##############################   基础sql开始   ############################## -->
	
	<resultMap id="resutlId" type="com.yffd.easy.pmi.model.PmiAccount">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="VERSION" property="version" jdbcType="INTEGER" />
		<result column="DEL_FLAG" property="delFlag" jdbcType="CHAR" />
		<result column="CREATER" property="creater" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="EDITOR" property="editor" jdbcType="VARCHAR" />
		<result column="EDIT_TIME" property="editTime" jdbcType="TIMESTAMP" />
  
		<result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="SHORT_NAME" property="shortName" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="pmi_account_table"> pmi_account </sql>
	<sql id="pmi_account_columns"> ID, VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME,
	ACCOUNT, PASSWORD, SHORT_NAME </sql>
	<sql id="pmi_account_limit"><if test="pageLimit != null and pageLimit != ''"> limit #{startRowNum}, #{numPerPage} </if></sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="pmi_account_where">
		<!-- Equal query -->
		<if test="account != null and account != ''"> and ACCOUNT = #{account} </if>
		<if test="password != null and password != ''"> and PASSWORD = #{password} </if>
		<!-- Like query -->
		<if test="shortName != null and shortName != ''"> and SHORT_NAME like CONCAT(CONCAT('%', #{shortName}), '%') </if>
	</sql>
	
	<!-- selectListBy、selectAll -->
	<select id="selectListBy" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="pmi_account_columns"/>
		from
		<include refid="pmi_account_table" />
		<where>
			<include refid="pmi_account_where" />
		</where>
		order by CREATE_TIME desc
		<include refid="pmi_account_limit" />
	</select>
	
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="pmi_account_table" />
		<where>
			<include refid="pmi_account_where" />
		</where>
	</select>
	
	<select id="selectByPK" parameterType="java.lang.String" resultMap="resutlId">
		select
		<include refid="pmi_account_columns"/>
		from
		<include refid="pmi_account_table" />
		where ID = #{_parameter}
	</select>
	
	<select id="selectOne" parameterType="java.util.Map" resultMap="resutlId">
		select
		<include refid="pmi_account_columns"/>
		from
		<include refid="pmi_account_table" />
		<where>
			<include refid="pmi_account_where" />
		</where>
	</select>
	
	<insert id="insert" parameterType="com.yffd.easy.pmi.model.PmiRole" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="pmi_account_table" />
		(VERSION, DEL_FLAG, CREATER, CREATE_TIME, EDITOR, EDIT_TIME,
		ACCOUNT, PASSWORD, SHORT_NAME)
		values
		(0, #{delFlag}, #{creater}, #{createTime}, #{editor}, #{editTime}, 
		#{account}, #{password}, #{shortName})
	</insert>
	
	<update id="updateByPK" parameterType="com.yffd.easy.pmi.model.PmiRole">
		update <include refid="pmi_account_table" />
		<set>
			version = version + 1,
			editor = #{editor, jdbcType=VARCHAR},
			edit_time = #{editTime, jdbcType=TIMESTAMP},
			PASSWORD = #{password, jdbcType=VARCHAR},
			SHORT_NAME = #{shortName, jdbcType=VARCHAR},
		</set>
		where ACCOUNT = #{_parameter}
	</update>
	
	<delete id="deleteByPK" parameterType="java.lang.String">
		delete from
		<include refid="pmi_account_table" />
		where ACCOUNT = #{_parameter}
	</delete>
	
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from
		<include refid="pmi_account_table" />
		<where>
			<include refid="pmi_account_where" />
		</where>
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from
		<include refid="pmi_account_table" />
		where ACCOUNT in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item.account}</foreach>
	</delete>
	
	<!-- ##############################   基础sql结束    ############################## -->
	
</mapper>